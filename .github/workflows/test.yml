name: 'Multi-eGO test'

on: [ push, pull_request ]

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8' ]

    steps:
      - uses: actions/checkout@v2
      - name: Setting up Python ${{ matrix.python-version }}
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # source: https://autobencoder.com/2020-08-24-conda-actions/
      - name: Install dependencies with conda
        run: |
          $CONDA/bin/conda env update --file environment.yml --name base
          # stop the build if there are Python syntax errors or undefined names
          $CONDA/bin/flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          $CONDA/bin/flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Install pytest
        run: |
        conda install pytest
      # - name: Install poetry
        # run: |
          # curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python - --version 1.1.8
          # $HOME/.local/bin/poetry config virtualenvs.in-project true
      # - uses: actions/cache@v1
        # with:
          # path: .venv
          # key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      # - name: Install depencies
        # run: $HOME/.local/bin/poetry install -E alphafold
      - name: Run tests
        # run: .venv/bin/pytest
        run: |
          pytest run_tests.py